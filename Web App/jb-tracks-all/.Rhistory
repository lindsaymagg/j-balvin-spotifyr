col_order <- c("track_name", "album_name",
"album_release_year", "album_type", "track_popularity", "duration_ms", "tempo", "valence", "energy", "danceability", "speechiness", "mode_name", "key_mode", "key", "artist_ids", "artists", "track_id", "album_release_date")
tracks <- tracks[, col_order]
return(tracks)
}
jb_tracks <- tracks_helper(jb_tracks_preserve_order, jb_tracks_popularity)
num_tracks <- jb_tracks %>%
group_by(album_release_year, album_type, track_name) %>%
dplyr::summarize(num_tracks = n())
# Plot the number of tracks released per year.
x <- ggplot(num_tracks, aes_string(fill = "factor(album_type, c('remix','single','album'))", x="album_release_year", weight="num_tracks", track_name="track_name", num_tracks = "num_tracks"))+
geom_bar(color = 'white')+
ggtitle("Number of Tracks Released by Year (All tracks)")+
theme_minimal()+
scale_y_continuous(breaks=seq(0,NROW(jb_tracks),5))+
scale_fill_manual(values=c(remix_color, "#619CFF", "#F8766D"), name = "Type\nof Release")
x <- ggplotly(x, source = "select", tooltip = c("track_name"))
x
jb_tracks <- tracks_helper(jb_tracks_all, "album")
tracks_helper <- function(jb_tracks, preserve_what){
# Get popularities
jb_tracks_popularity <- jb_tracks %>% arrange(track_name, -track_popularity) %>% distinct(tolower(track_name), .keep_all = TRUE)
# Get rid of duplicates by preserving either release date or albums
tracks_ordered <- {
if (order_by_what == "album") {
# Keep albums together
jb_tracks %>% arrange(track_name, album_type, album_name) %>% distinct(tolower(track_name), .keep_all = TRUE)
} else {
# Prioritize first song released
jb_tracks %>% arrange(desc(track_name), as.Date(album_release_date)) %>% distinct(tolower(track_name), .keep_all = TRUE)
}
}
# Merge together
tracks_full <- left_join(tracks_ordered, tracks_popularity, by = "tolower(track_name)")
# Drop repetitive columns
tracks_full <- tracks_full[,!(names(tracks_full) %in% c("tolower(track_name)", "album_type.y", "album_release_date.y", "album_release_year.y", "danceability.y", "energy.y", "key.y", "speechiness.y", "valence.y", "track_id.y", "artists.y", "artist_ids.y", "duration_ms.y", "track_name.y", "album_name.y", "mode_name.y", "key_mode.y", "track_number.y", "tempo.y", "track_popularity.x"))]
# Manually drop additional duplicates:
# Mi Gente - F4ST, Velza & Loudness Remix, Mi Gente Feat. Beyoncé, Que Calor - Saweetie Remix, Que Calor (with J Balvin & El Alfa), RITMO (Bad Boys For Life) - Rosabel Dub Remix, Roses (Imanbek Remix) [Latino Gang], Roses - Imanbek Remix [Latino Gang], Ven y Hazlo Tú, X (Remix), Bum Bum Tam Tam - Jonas Blue Extended Mix, Hey Ma (feat. Camila Cabello), Hey Ma (with J Balvin & Pitbull feat. Camila Cabello), UN DIA (Feat. Tainy), Ven y Hazlo Tú, Que Calor
duplicates <- c("3Oo7GUPSn3Nvdi4XBBhHyv", "5tSSdDqt0UvWXbxqRd9hTk", "2bUeGVkbuz2uJNBmHkNVhY", "1G2CAJeP7rCwOZjlSJ0Zw3", "6kBhyF31wa4Dt0Pt733vth", "03fb0nlJGQBTybCb71ZW2R", "2zJ2jLVDrl1tfMZkR89j4k", "46F5O39iDmdRuwRAS7KR6B", "5cZaDnYFu5FjuMLucBH7vO", "23cixn3e6AcLz2G3ujfMEJ", "05OzEk1HeSYwVE2byVkKbU", "7ggff9uRIDrDelWpwlUhSs", "0EhpEsp4L0oRGM0vmeaN5e", "5lsttfyShVGIdbbBsy83xt", "1sviDBcAqVOxMXq4xITVEs")
tracks <- tracks_full %>% filter(!track_id.x %in% duplicates) %>% arrange(-album_release_year.x)
# Clean column names
names(tracks) = gsub(pattern = "\\.x", replacement = "", x = names(tracks))
names(tracks) = gsub(pattern = "\\.y", replacement = "", x = names(tracks))
tracks <- tracks %>% arrange(desc(album_release_date))
col_order <- c("track_name", "album_name",
"album_release_year", "album_type", "track_popularity", "duration_ms", "tempo", "valence", "energy", "danceability", "speechiness", "mode_name", "key_mode", "key", "artist_ids", "artists", "track_id", "album_release_date")
tracks <- tracks[, col_order]
return(tracks)
}
jb_tracks <- tracks_helper(jb_tracks_all, "album")
tracks_helper <- function(jb_tracks, preserve_what){
# Get popularities
jb_tracks_popularity <- jb_tracks %>% arrange(track_name, -track_popularity) %>% distinct(tolower(track_name), .keep_all = TRUE)
# Get rid of duplicates by preserving either release date or albums
tracks_ordered <- {
if (preserve_what == "album") {
# Keep albums together
jb_tracks %>% arrange(track_name, album_type, album_name) %>% distinct(tolower(track_name), .keep_all = TRUE)
} else {
# Prioritize first song released
jb_tracks %>% arrange(desc(track_name), as.Date(album_release_date)) %>% distinct(tolower(track_name), .keep_all = TRUE)
}
}
# Merge together
tracks_full <- left_join(tracks_ordered, tracks_popularity, by = "tolower(track_name)")
# Drop repetitive columns
tracks_full <- tracks_full[,!(names(tracks_full) %in% c("tolower(track_name)", "album_type.y", "album_release_date.y", "album_release_year.y", "danceability.y", "energy.y", "key.y", "speechiness.y", "valence.y", "track_id.y", "artists.y", "artist_ids.y", "duration_ms.y", "track_name.y", "album_name.y", "mode_name.y", "key_mode.y", "track_number.y", "tempo.y", "track_popularity.x"))]
# Manually drop additional duplicates:
# Mi Gente - F4ST, Velza & Loudness Remix, Mi Gente Feat. Beyoncé, Que Calor - Saweetie Remix, Que Calor (with J Balvin & El Alfa), RITMO (Bad Boys For Life) - Rosabel Dub Remix, Roses (Imanbek Remix) [Latino Gang], Roses - Imanbek Remix [Latino Gang], Ven y Hazlo Tú, X (Remix), Bum Bum Tam Tam - Jonas Blue Extended Mix, Hey Ma (feat. Camila Cabello), Hey Ma (with J Balvin & Pitbull feat. Camila Cabello), UN DIA (Feat. Tainy), Ven y Hazlo Tú, Que Calor
duplicates <- c("3Oo7GUPSn3Nvdi4XBBhHyv", "5tSSdDqt0UvWXbxqRd9hTk", "2bUeGVkbuz2uJNBmHkNVhY", "1G2CAJeP7rCwOZjlSJ0Zw3", "6kBhyF31wa4Dt0Pt733vth", "03fb0nlJGQBTybCb71ZW2R", "2zJ2jLVDrl1tfMZkR89j4k", "46F5O39iDmdRuwRAS7KR6B", "5cZaDnYFu5FjuMLucBH7vO", "23cixn3e6AcLz2G3ujfMEJ", "05OzEk1HeSYwVE2byVkKbU", "7ggff9uRIDrDelWpwlUhSs", "0EhpEsp4L0oRGM0vmeaN5e", "5lsttfyShVGIdbbBsy83xt", "1sviDBcAqVOxMXq4xITVEs")
tracks <- tracks_full %>% filter(!track_id.x %in% duplicates) %>% arrange(-album_release_year.x)
# Clean column names
names(tracks) = gsub(pattern = "\\.x", replacement = "", x = names(tracks))
names(tracks) = gsub(pattern = "\\.y", replacement = "", x = names(tracks))
tracks <- tracks %>% arrange(desc(album_release_date))
col_order <- c("track_name", "album_name",
"album_release_year", "album_type", "track_popularity", "duration_ms", "tempo", "valence", "energy", "danceability", "speechiness", "mode_name", "key_mode", "key", "artist_ids", "artists", "track_id", "album_release_date")
tracks <- tracks[, col_order]
return(tracks)
}
jb_tracks <- tracks_helper(jb_tracks_all, "album")
tracks_helper <- function(jb_tracks, preserve_what){
# Get popularities
tracks_popularity <- jb_tracks %>% arrange(track_name, -track_popularity) %>% distinct(tolower(track_name), .keep_all = TRUE)
# Get rid of duplicates by preserving either release date or albums
tracks_ordered <- {
if (preserve_what == "album") {
# Keep albums together
jb_tracks %>% arrange(track_name, album_type, album_name) %>% distinct(tolower(track_name), .keep_all = TRUE)
} else {
# Prioritize first song released
jb_tracks %>% arrange(desc(track_name), as.Date(album_release_date)) %>% distinct(tolower(track_name), .keep_all = TRUE)
}
}
# Merge together
tracks_full <- left_join(tracks_ordered, tracks_popularity, by = "tolower(track_name)")
# Drop repetitive columns
tracks_full <- tracks_full[,!(names(tracks_full) %in% c("tolower(track_name)", "album_type.y", "album_release_date.y", "album_release_year.y", "danceability.y", "energy.y", "key.y", "speechiness.y", "valence.y", "track_id.y", "artists.y", "artist_ids.y", "duration_ms.y", "track_name.y", "album_name.y", "mode_name.y", "key_mode.y", "track_number.y", "tempo.y", "track_popularity.x"))]
# Manually drop additional duplicates:
# Mi Gente - F4ST, Velza & Loudness Remix, Mi Gente Feat. Beyoncé, Que Calor - Saweetie Remix, Que Calor (with J Balvin & El Alfa), RITMO (Bad Boys For Life) - Rosabel Dub Remix, Roses (Imanbek Remix) [Latino Gang], Roses - Imanbek Remix [Latino Gang], Ven y Hazlo Tú, X (Remix), Bum Bum Tam Tam - Jonas Blue Extended Mix, Hey Ma (feat. Camila Cabello), Hey Ma (with J Balvin & Pitbull feat. Camila Cabello), UN DIA (Feat. Tainy), Ven y Hazlo Tú, Que Calor
duplicates <- c("3Oo7GUPSn3Nvdi4XBBhHyv", "5tSSdDqt0UvWXbxqRd9hTk", "2bUeGVkbuz2uJNBmHkNVhY", "1G2CAJeP7rCwOZjlSJ0Zw3", "6kBhyF31wa4Dt0Pt733vth", "03fb0nlJGQBTybCb71ZW2R", "2zJ2jLVDrl1tfMZkR89j4k", "46F5O39iDmdRuwRAS7KR6B", "5cZaDnYFu5FjuMLucBH7vO", "23cixn3e6AcLz2G3ujfMEJ", "05OzEk1HeSYwVE2byVkKbU", "7ggff9uRIDrDelWpwlUhSs", "0EhpEsp4L0oRGM0vmeaN5e", "5lsttfyShVGIdbbBsy83xt", "1sviDBcAqVOxMXq4xITVEs")
tracks <- tracks_full %>% filter(!track_id.x %in% duplicates) %>% arrange(-album_release_year.x)
# Clean column names
names(tracks) = gsub(pattern = "\\.x", replacement = "", x = names(tracks))
names(tracks) = gsub(pattern = "\\.y", replacement = "", x = names(tracks))
tracks <- tracks %>% arrange(desc(album_release_date))
col_order <- c("track_name", "album_name",
"album_release_year", "album_type", "track_popularity", "duration_ms", "tempo", "valence", "energy", "danceability", "speechiness", "mode_name", "key_mode", "key", "artist_ids", "artists", "track_id", "album_release_date")
tracks <- tracks[, col_order]
return(tracks)
}
jb_tracks <- tracks_helper(jb_tracks_all, "album")
num_tracks <- jb_tracks %>%
group_by(album_release_year, album_type, track_name) %>%
dplyr::summarize(num_tracks = n())
# Plot the number of tracks released per year.
x <- ggplot(num_tracks, aes_string(fill = "factor(album_type, c('remix','single','album'))", x="album_release_year", weight="num_tracks", track_name="track_name", num_tracks = "num_tracks"))+
geom_bar(color = 'white')+
ggtitle("Number of Tracks Released by Year (All tracks)")+
theme_minimal()+
scale_y_continuous(breaks=seq(0,NROW(jb_tracks),5))+
scale_fill_manual(values=c(remix_color, "#619CFF", "#F8766D"), name = "Type\nof Release")
x <- ggplotly(x, source = "select", tooltip = c("track_name"))
x
tracks_helper <- function(jb_tracks, preserve_what){
# Get popularities
tracks_popularity <- jb_tracks %>% arrange(track_name, -track_popularity) %>% distinct(tolower(track_name), .keep_all = TRUE)
# Get rid of duplicates by preserving either release date or albums
tracks_ordered <- {
if (preserve_what == "album") {
# Keep albums together
jb_tracks %>% arrange(track_name, album_type, album_name) %>% distinct(tolower(track_name), .keep_all = TRUE)
} else {
# Prioritize first song released
jb_tracks %>% arrange(desc(track_name), as.Date(album_release_date)) %>% distinct(tolower(track_name), .keep_all = TRUE)
}
}
# Merge together
tracks_full <- left_join(tracks_ordered, tracks_popularity, by = "tolower(track_name)")
# Drop repetitive columns
tracks_full <- tracks_full[,!(names(tracks_full) %in% c("tolower(track_name)", "album_type.y", "album_release_date.y", "album_release_year.y", "danceability.y", "energy.y", "key.y", "speechiness.y", "valence.y", "track_id.y", "artists.y", "artist_ids.y", "duration_ms.y", "track_name.y", "album_name.y", "mode_name.y", "key_mode.y", "track_number.y", "tempo.y", "track_popularity.x"))]
# Manually drop additional duplicates:
# Mi Gente - F4ST, Velza & Loudness Remix, Mi Gente Feat. Beyoncé, Que Calor - Saweetie Remix, Que Calor (with J Balvin & El Alfa), RITMO (Bad Boys For Life) - Rosabel Dub Remix, Roses (Imanbek Remix) [Latino Gang], Roses - Imanbek Remix [Latino Gang], Ven y Hazlo Tú, X (Remix), Bum Bum Tam Tam - Jonas Blue Extended Mix, Hey Ma (feat. Camila Cabello), Hey Ma (with J Balvin & Pitbull feat. Camila Cabello), UN DIA (Feat. Tainy), Ven y Hazlo Tú, Que Calor
duplicates <- c("3Oo7GUPSn3Nvdi4XBBhHyv", "5tSSdDqt0UvWXbxqRd9hTk", "2bUeGVkbuz2uJNBmHkNVhY", "1G2CAJeP7rCwOZjlSJ0Zw3", "6kBhyF31wa4Dt0Pt733vth", "03fb0nlJGQBTybCb71ZW2R", "2zJ2jLVDrl1tfMZkR89j4k", "46F5O39iDmdRuwRAS7KR6B", "5cZaDnYFu5FjuMLucBH7vO", "23cixn3e6AcLz2G3ujfMEJ", "05OzEk1HeSYwVE2byVkKbU", "7ggff9uRIDrDelWpwlUhSs", "5lsttfyShVGIdbbBsy83xt", "1sviDBcAqVOxMXq4xITVEs")
if (preserve_what == "album"){
duplicates <- duplicates %>% append("0EhpEsp4L0oRGM0vmeaN5e")
} else {
duplicates <- duplicates %>% append("66x45Yh9x397PWpxMX0ZDT")
}
tracks <- tracks_full %>% filter(!track_id.x %in% duplicates) %>% arrange(-album_release_year.x)
# Clean column names
names(tracks) = gsub(pattern = "\\.x", replacement = "", x = names(tracks))
names(tracks) = gsub(pattern = "\\.y", replacement = "", x = names(tracks))
tracks <- tracks %>% arrange(desc(album_release_date))
col_order <- c("track_name", "album_name",
"album_release_year", "album_type", "track_popularity", "duration_ms", "tempo", "valence", "energy", "danceability", "speechiness", "mode_name", "key_mode", "key", "artist_ids", "artists", "track_id", "album_release_date")
tracks <- tracks[, col_order]
return(tracks)
}
jb_tracks_all <- read.csv("jb_tracks_all_2021-12-25.csv")
jb_tracks_all <- jb_tracks_all[,!(names(jb_tracks_all) %in% c("X"))]
albums_only <- jb_tracks_all %>% filter(album_type == "album") %>% arrange(track_name, -track_popularity) %>% distinct(track_name, album_name, .keep_all = TRUE)
# Label remixes and alternate versions of the same song as 'remixes' rather than singles or album tracks.
# Mi Gente with Beyonce (0GzmMQizDeA2NVMUaZksv0, 5tSSdDqt0UvWXbxqRd9hTk, 1DoK3CdipMjplLk5LXUdcp, 0SjzIvde8QyAGeXwOgy9rs) and Sin Compromiso (feat. Jowell Y Randy) (0gHSFpCQZmZ1LwPHQpzn6T) should also be labeled as a remix.
label_as_remix <- c("0GzmMQizDeA2NVMUaZksv0", "0gHSFpCQZmZ1LwPHQpzn6T", "5tSSdDqt0UvWXbxqRd9hTk", "1DoK3CdipMjplLk5LXUdcp", "0SjzIvde8QyAGeXwOgy9rs")
is_remix <- grepl('remix', tolower(jb_tracks_all$track_name)) | grepl('dub', tolower(jb_tracks_all$track_name)) | grepl('edit', tolower(jb_tracks_all$track_name)) | (grepl('mix', tolower(jb_tracks_all$track_name)) & !grepl('mixtape volume 1', tolower(jb_tracks_all$track_name))) | grepl('version', tolower(jb_tracks_all$track_name)) | grepl('acappella', tolower(jb_tracks_all$track_name)) | grepl('spanglish', tolower(jb_tracks_all$track_name)) | grepl('instrumental', tolower(jb_tracks_all$track_name)) | (jb_tracks_all$track_id %in% label_as_remix)
is_single <- grepl('single', jb_tracks_all$album_type)
is_album <- grepl('album', jb_tracks_all$album_type)
jb_tracks_all$album_type <- case_when(is_remix ~ 'remix',
is_single ~ 'single',
is_album ~ 'album')
# Get rid of duplicate tracks (some songs are simply listed more than once on Spotify).
jb_tracks <- jb_tracks_all
tracks_helper <- function(jb_tracks, preserve_what){
# Get popularities
tracks_popularity <- jb_tracks %>% arrange(track_name, -track_popularity) %>% distinct(tolower(track_name), .keep_all = TRUE)
# Get rid of duplicates by preserving either release date or albums
tracks_ordered <- {
if (preserve_what == "album") {
# Keep albums together
jb_tracks %>% arrange(track_name, album_type, album_name) %>% distinct(tolower(track_name), .keep_all = TRUE)
} else {
# Prioritize first song released
jb_tracks %>% arrange(desc(track_name), as.Date(album_release_date)) %>% distinct(tolower(track_name), .keep_all = TRUE)
}
}
# Merge together
tracks_full <- left_join(tracks_ordered, tracks_popularity, by = "tolower(track_name)")
# Drop repetitive columns
tracks_full <- tracks_full[,!(names(tracks_full) %in% c("tolower(track_name)", "album_type.y", "album_release_date.y", "album_release_year.y", "danceability.y", "energy.y", "key.y", "speechiness.y", "valence.y", "track_id.y", "artists.y", "artist_ids.y", "duration_ms.y", "track_name.y", "album_name.y", "mode_name.y", "key_mode.y", "track_number.y", "tempo.y", "track_popularity.x"))]
# Manually drop additional duplicates:
# Mi Gente - F4ST, Velza & Loudness Remix, Mi Gente Feat. Beyoncé, Que Calor - Saweetie Remix, Que Calor (with J Balvin & El Alfa), RITMO (Bad Boys For Life) - Rosabel Dub Remix, Roses (Imanbek Remix) [Latino Gang], Roses - Imanbek Remix [Latino Gang], Ven y Hazlo Tú, X (Remix), Bum Bum Tam Tam - Jonas Blue Extended Mix, Hey Ma (feat. Camila Cabello), Hey Ma (with J Balvin & Pitbull feat. Camila Cabello), UN DIA (Feat. Tainy), Ven y Hazlo Tú, Que Calor
duplicates <- c("3Oo7GUPSn3Nvdi4XBBhHyv", "5tSSdDqt0UvWXbxqRd9hTk", "2bUeGVkbuz2uJNBmHkNVhY", "1G2CAJeP7rCwOZjlSJ0Zw3", "6kBhyF31wa4Dt0Pt733vth", "03fb0nlJGQBTybCb71ZW2R", "2zJ2jLVDrl1tfMZkR89j4k", "46F5O39iDmdRuwRAS7KR6B", "5cZaDnYFu5FjuMLucBH7vO", "23cixn3e6AcLz2G3ujfMEJ", "05OzEk1HeSYwVE2byVkKbU", "7ggff9uRIDrDelWpwlUhSs", "5lsttfyShVGIdbbBsy83xt", "1sviDBcAqVOxMXq4xITVEs")
if (preserve_what == "album"){
duplicates <- duplicates %>% append("0EhpEsp4L0oRGM0vmeaN5e")
} else {
duplicates <- duplicates %>% append("66x45Yh9x397PWpxMX0ZDT")
}
tracks <- tracks_full %>% filter(!track_id.x %in% duplicates) %>% arrange(-album_release_year.x)
# Clean column names
names(tracks) = gsub(pattern = "\\.x", replacement = "", x = names(tracks))
names(tracks) = gsub(pattern = "\\.y", replacement = "", x = names(tracks))
tracks <- tracks %>% arrange(desc(album_release_date))
col_order <- c("track_name", "album_name",
"album_release_year", "album_type", "track_popularity", "duration_ms", "tempo", "valence", "energy", "danceability", "speechiness", "mode_name", "key_mode", "key", "artist_ids", "artists", "track_id", "album_release_date")
tracks <- tracks[, col_order]
return(tracks)
}
jb_tracks <- tracks_helper(jb_tracks_all, "album")
num_tracks <- jb_tracks %>%
group_by(album_release_year, album_type, track_name) %>%
dplyr::summarize(num_tracks = n())
# Plot the number of tracks released per year.
x <- ggplot(num_tracks, aes_string(fill = "factor(album_type, c('remix','single','album'))", x="album_release_year", weight="num_tracks", track_name="track_name", num_tracks = "num_tracks"))+
geom_bar(color = 'white')+
ggtitle("Number of Tracks Released by Year (All tracks)")+
theme_minimal()+
scale_y_continuous(breaks=seq(0,NROW(jb_tracks),5))+
scale_fill_manual(values=c(remix_color, "#619CFF", "#F8766D"), name = "Type\nof Release")
x <- ggplotly(x, source = "select", tooltip = c("track_name"))
x
jb_tracks <- tracks_helper(jb_tracks_all, "date")
num_tracks <- jb_tracks %>%
group_by(album_release_year, album_type, track_name) %>%
dplyr::summarize(num_tracks = n())
# Plot the number of tracks released per year.
x <- ggplot(num_tracks, aes_string(fill = "factor(album_type, c('remix','single','album'))", x="album_release_year", weight="num_tracks", track_name="track_name", num_tracks = "num_tracks"))+
geom_bar(color = 'white')+
ggtitle("Number of Tracks Released by Year (All tracks)")+
theme_minimal()+
scale_y_continuous(breaks=seq(0,NROW(jb_tracks),5))+
scale_fill_manual(values=c(remix_color, "#619CFF", "#F8766D"), name = "Type\nof Release")
x <- ggplotly(x, source = "select", tooltip = c("track_name"))
x
runApp('Documents/J Balvin Project/Web App')
runApp()
runApp('Documents/J Balvin Project/Web App')
jb_tracks <- tracks_helper(jb_tracks_all, "album")
View(jb_tracks)
tracks_helper <- function(jb_tracks, preserve_what){
# Get popularities
tracks_popularity <- jb_tracks %>% arrange(track_name, -track_popularity) %>% distinct(tolower(track_name), .keep_all = TRUE)
# Get rid of duplicates by preserving either release date or albums
tracks_ordered <- {
if (preserve_what == "album") {
# Keep albums together
jb_tracks %>% arrange(track_name, album_type, album_name, album_release_date) %>% distinct(tolower(track_name), .keep_all = TRUE)
} else {
# Prioritize first song released
jb_tracks %>% arrange(desc(track_name), as.Date(album_release_date)) %>% distinct(tolower(track_name), .keep_all = TRUE)
}
}
# Merge together
tracks_full <- left_join(tracks_ordered, tracks_popularity, by = "tolower(track_name)")
# Drop repetitive columns
tracks_full <- tracks_full[,!(names(tracks_full) %in% c("tolower(track_name)", "album_type.y", "album_release_date.y", "album_release_year.y", "danceability.y", "energy.y", "key.y", "speechiness.y", "valence.y", "track_id.y", "artists.y", "artist_ids.y", "duration_ms.y", "track_name.y", "album_name.y", "mode_name.y", "key_mode.y", "track_number.y", "tempo.y", "track_popularity.x"))]
# Manually drop additional duplicates:
# Mi Gente - F4ST, Velza & Loudness Remix, Mi Gente Feat. Beyoncé, Que Calor - Saweetie Remix, Que Calor (with J Balvin & El Alfa), RITMO (Bad Boys For Life) - Rosabel Dub Remix, Roses (Imanbek Remix) [Latino Gang], Roses - Imanbek Remix [Latino Gang], Ven y Hazlo Tú, X (Remix), Bum Bum Tam Tam - Jonas Blue Extended Mix, Hey Ma (feat. Camila Cabello), Hey Ma (with J Balvin & Pitbull feat. Camila Cabello), UN DIA (Feat. Tainy), Ven y Hazlo Tú, Que Calor
duplicates <- c("3Oo7GUPSn3Nvdi4XBBhHyv", "5tSSdDqt0UvWXbxqRd9hTk", "2bUeGVkbuz2uJNBmHkNVhY", "1G2CAJeP7rCwOZjlSJ0Zw3", "6kBhyF31wa4Dt0Pt733vth", "03fb0nlJGQBTybCb71ZW2R", "2zJ2jLVDrl1tfMZkR89j4k", "46F5O39iDmdRuwRAS7KR6B", "5cZaDnYFu5FjuMLucBH7vO", "23cixn3e6AcLz2G3ujfMEJ", "05OzEk1HeSYwVE2byVkKbU", "7ggff9uRIDrDelWpwlUhSs", "5lsttfyShVGIdbbBsy83xt", "1sviDBcAqVOxMXq4xITVEs")
if (preserve_what == "album"){
duplicates <- duplicates %>% append("0EhpEsp4L0oRGM0vmeaN5e")
} else {
duplicates <- duplicates %>% append("66x45Yh9x397PWpxMX0ZDT")
}
tracks <- tracks_full %>% filter(!track_id.x %in% duplicates) %>% arrange(-album_release_year.x)
# Clean column names
names(tracks) = gsub(pattern = "\\.x", replacement = "", x = names(tracks))
names(tracks) = gsub(pattern = "\\.y", replacement = "", x = names(tracks))
tracks <- tracks %>% arrange(desc(album_release_date))
col_order <- c("track_name", "album_name",
"album_release_year", "album_type", "track_popularity", "duration_ms", "tempo", "valence", "energy", "danceability", "speechiness", "mode_name", "key_mode", "key", "artist_ids", "artists", "track_id", "album_release_date")
tracks <- tracks[, col_order]
return(tracks)
}
jb_tracks <- tracks_helper(jb_tracks_all, "album")
View(jb_tracks)
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
jb_tracks <- tracks_helper(jb_tracks_all, "album")
View(jb_tracks)
jb_tracks <- tracks_helper(jb_tracks_all, "date")
View(jb_tracks)
runApp('Documents/J Balvin Project/Web App')
jb_tracks <- tracks_helper(jb_tracks_all, "date")
View(jb_tracks)
la_venganza <- jb_tracks_all %>% filter(track_name == "La Venganza")
View(la_venganza)
la_venganza <- jb_tracks_all %>% filter(track_name == "La Venganza")
View(la_venganza)
runApp('Documents/J Balvin Project/Web App')
runApp()
runApp('Documents/J Balvin Project/Web App')
View(jb_collabs_full)
jb_collabs_full$artist2
unique(jb_collabs_full$artist2)
unique(sort(jb_collabs_full$artist2))
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
View(num_collabs_genre)
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
la_venganza <- jb_tracks_all %>% filter(track_name == "La Venganza")
View(la_venganza)
la_venganza_familia = subset(jb_tracks_all, track_id == "5YRpDfCCBCNAKDGIlBODbU")
la_venganza_jose = subset(jb_tracks_all, track_id == "0Pe4DpJDmZtOybHgrZ1hyM")
View(la_venganza_familia)
View(la_venganza_jose)
runApp('Documents/J Balvin Project/Web App')
View(jb_tracks_all)
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
runApp()
runApp('Documents/J Balvin Project/Web App')
runApp()
runApp('Documents/J Balvin Project/Web App')
runApp()
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
runApp('Documents/J Balvin Project/Web App')
# Spotify credentials
Sys.setenv(SPOTIFY_CLIENT_ID = '111c591bacc340e2b10d5bf3d0ee0308')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'e84ab3fcac7e4821ba33a9e05b3baa43')
Sys.setenv(GENIUS_API_TOKEN = 'QrL3LZ6y6KEuHi1DdLL1F3VFdGH_5S02WX7UiiMEadYQF82LEfv_H_mghPn00hbq')
access_token <- get_spotify_access_token()
print("Credentials loaded")
target_artist_id = "4q3ewBCX7sLwd24euuV69X"
target_artist_name = "Bad Bunny"
print("Getting songs...")
jb_tracks_all <- get_artist_audio_features(
artist = target_artist_id,
include_groups = c("album", "single"),
dedupe_albums = TRUE
) %>% drop_na("track_id") %>% drop_na("album_type")
# Write to CSV so I don't have to fetch songs every time I load this document.
jb_tracks_all$artist_ids <- sapply(jb_tracks_all$artists, compress_artist_ids)
jb_tracks_all$artists <- sapply(jb_tracks_all$artists, compress_artist_names)
# Drop columns holding information I don't need.
drop_cols <- c("artist_name", "artist_id", "album_id", "album_images", "album_release_date_precision", "analysis_url", "available_markets", "disc_number", "explicit","track_href","is_local","track_preview_url","track", "track_uri", "external_urls.spotify", "type", "time_signature", "mode", "loudness", "acousticness", "instrumentalness", "liveness", "key_name")
jb_tracks_all <- jb_tracks_all[,!(names(jb_tracks_all) %in% drop_cols)]
print("Got songs.")
print("Getting popularity...")
tracks_pop <- get_jb_tracks_pop(jb_tracks_all$track_id)
jb_tracks_all$track_popularity <- tracks_pop$popularity
print("Got popularity.")
file_name <- paste(target_artist_name, "jb-tracks-all", Sys.Date(), ".csv", sep = "_")
print(paste("File name:", file_name))
setwd("/Users/lindsaymaggioncalda/Documents/J Balvin Project/Web App/jb-tracks-all")
write.csv(jb_tracks_all, file_name)
print("Completed.")
runApp('~/Documents/J Balvin Project/Web App')
runApp()
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
target_artist_id = "1vyhD5VmyZ7KMfW5gqLgo5"
target_artist_name = "J Balvin"
# Retrieve all of J Balvin's released tracks (albums and singles) from Spotify API.
# Spotify credentials
Sys.setenv(SPOTIFY_CLIENT_ID = '111c591bacc340e2b10d5bf3d0ee0308')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'e84ab3fcac7e4821ba33a9e05b3baa43')
Sys.setenv(GENIUS_API_TOKEN = 'QrL3LZ6y6KEuHi1DdLL1F3VFdGH_5S02WX7UiiMEadYQF82LEfv_H_mghPn00hbq')
access_token <- get_spotify_access_token()
print("Credentials loaded")
print("Getting songs...")
jb_tracks_all <- get_artist_audio_features(
artist = target_artist_id,
include_groups = c("album", "single"),
dedupe_albums = TRUE
) %>% drop_na("track_id") %>% drop_na("album_type")
# Write to CSV so I don't have to fetch songs every time I load this document.
jb_tracks_all$artist_ids <- sapply(jb_tracks_all$artists, compress_artist_ids)
jb_tracks_all$artists <- sapply(jb_tracks_all$artists, compress_artist_names)
# Drop columns holding information I don't need.
drop_cols <- c("artist_name", "artist_id", "album_id", "album_images", "album_release_date_precision", "analysis_url", "available_markets", "disc_number", "explicit","track_href","is_local","track_preview_url","track", "track_uri", "external_urls.spotify", "type", "time_signature", "mode", "loudness", "acousticness", "instrumentalness", "liveness", "key_name")
jb_tracks_all <- jb_tracks_all[,!(names(jb_tracks_all) %in% drop_cols)]
print("Got songs.")
print("Getting popularity...")
tracks_pop <- get_jb_tracks_pop(jb_tracks_all$track_id)
jb_tracks_all$track_popularity <- tracks_pop$popularity
print("Got popularity.")
file_name <- paste("jb-tracks-all", Sys.Date(), ".csv", sep = "_")
print(paste("File name:", file_name))
setwd("/Users/lindsaymaggioncalda/Documents/J Balvin Project/Web App/jb-tracks-all")
write.csv(jb_tracks_all, file_name)
print("Completed.")
runApp('~/Documents/J Balvin Project/Web App')
View(genre_yr_artists)
genre_yr_artists$weight <- 1
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="weight", artists = "artists"))+
geom_bar()+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="weight", artists = "artists"))+
geom_bar()+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
# Add num genres per year
printable <- genre_yr_artists %>% group_by(genre,year) %>% group_by(year) %>% dplyr::summarize(num_genres = n())
datatable(
printable, caption = "Number of genres collaborated with per year", rownames = FALSE, options = list(
dom = 't',
pageLength = NROW(printable),
scrollX = TRUE
)
)
runApp('~/Documents/J Balvin Project/Web App')
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="num_artists", artists = "artists"))+
geom_bar(position = "dodge")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
runApp('~/Documents/J Balvin Project/Web App')
genre_yr_artists$genre <- factor(genre_yr_artists$genre, levels = num_artists)
genre_yr_artists$genre <- factor(genre_yr_artists$genre, levels = genre_yr_artists$num_artists)
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="num_artists", artists = "artists"))+
geom_bar(position = "dodge")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="weight", artists = "artists"))+
geom_bar(position = "stack")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="num_artists", artists = "artists"))+
geom_bar(position = "dodge")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
c <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="weight", artists = "artists"))+
geom_bar(position = "stack")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(c, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
c <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="weight", artists = "artists"))+
geom_bar(position = "stack")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of unique genre tags of collaborations",
x = "Year")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(c, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
c <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="weight", artists = "artists"))+
geom_bar(position = "stack", color = "white")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of unique genre tags of collaborations",
x = "Year")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(c, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
runApp('~/Documents/J Balvin Project/Web App')
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="num_artists", artists = "artists"))+
geom_bar(position = "dodge")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists"))
#%>% layout(showlegend = FALSE)
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="num_artists", artists = "artists"))+
geom_bar(position = "dodge")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists")) %>% layout(showlegend = FALSE)
b <- ggplot(genre_yr_artists, aes_string(fill="genre", x="year", weight="num_artists", artists = "artists"))+
geom_bar(position = "dodge")+
labs(title = "J Balvin's Collaborators' Genres (All Tracks)",
y = "Number of collaborators with genre tag",
x = "Genre of collaborator")+
theme_minimal()+
scale_y_continuous(breaks=seq(0, (num_collabs_person$collaborator %>% unique() %>% length()), 5))
ggplotly(b, tooltip = c("genre", "artists", "num_artists"))
#%>% layout(showlegend = FALSE)
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
runApp('~/Documents/J Balvin Project/Web App')
